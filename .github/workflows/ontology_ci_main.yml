name: "ci(ontology): main — CF-ONT-101/201"

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/ontology_ci_main.yml"
      - "validator/**"
      - "schemas/**"
      - "registry.yaml"
      - "registry.yml"
      - "runs/**"
      - "engine/**"
      - "setups/**"

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema pyyaml
      - name: CF-ONT-101 — DSL SignalEvent integrity
        run: python validator/dsl_checker.py --events runs --strict --out runs/ci/cf_ont_101.json
      - name: CF-ONT-201 — SSOT registry cohesion
        run: |
          python validator/registry_cohesion_checker.py > runs/ci/cf_ont_201.json
          python -c "import json,sys; d=json.load(open('runs/ci/cf_ont_201.json','r',encoding='utf-8')); print(d); sys.exit(0 if d.get('pass',False) else 1)"
      - name: Synthesize report
        if: always()
        run: |
          python - <<'PY'
import json, os, datetime, pathlib
pathlib.Path("runs/ci").mkdir(parents=True, exist_ok=True)
r={}
for f in ["runs/ci/cf_ont_101.json","runs/ci/cf_ont_201.json"]:
    if os.path.exists(f):
        try: r[os.path.basename(f)] = json.load(open(f,"r",encoding="utf-8"))
        except Exception as e: r[os.path.basename(f)] = {"read_error": True, "err": str(e)}
r["summary"]={"ts":datetime.datetime.utcnow().isoformat()+"Z",
              "pass": all(v.get("pass",False) for k,v in r.items() if k.endswith(".json"))}
json.dump(r, open("runs/ci/validator_report.json","w",encoding="utf-8"), ensure_ascii=False, indent=2)
print(json.dumps(r,ensure_ascii=False))
PY
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ontology-ci-artifacts
          path: runs/ci
